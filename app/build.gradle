apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion builds.compileSdk
    defaultConfig {
        applicationId "com.relieve.android"
        minSdkVersion builds.minSdk
        targetSdkVersion builds.compileSdk
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // locals
    api project(':lib_rsux')

    // Views
    implementation "androidx.appcompat:appcompat:$versions.xAppCompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.xConstraintLayout"

    // pager
    implementation "com.tbuonomo.andrui:viewpagerdotsindicator:$versions.dotsindicator"

    // Android Architecture Component
    implementation "androidx.core:core-ktx:$versions.ktxCore"
    implementation "androidx.fragment:fragment-ktx:$versions.ktxFragment"
    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    // room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    // navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$versions.ktxNavigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$versions.ktxNavigation"
    // work manager
    implementation "android.arch.work:work-runtime-ktx:$versions.work"

    // multi dex
    implementation "androidx.multidex:multidex:$versions.multidex"

    // glide - image loader
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // retrofit + gson
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    implementation "com.google.code.gson:gson:$versions.gson"

    // firebase
    implementation "com.google.firebase:firebase-core:$versions.firebaseCore"
    implementation "com.google.firebase:firebase-auth:$versions.firebaseAuth"

    implementation "com.google.android.gms:play-services-auth:$versions.playAuth"

    // fcm - notification
    implementation "com.google.firebase:firebase-messaging:$versions.firebaseMessaging"

    // leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakCanary"

    // test dependencies
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.arch.core:core-testing:$versions.lifecycle" // lifecycle
    testImplementation "androidx.room:room-testing:$versions.room" // room
    androidTestImplementation "android.arch.work:work-testing:$versions.work" // work manager
    androidTestImplementation "android.arch.navigation:navigation-testing:$versions.ktxNavigation" // navigation
    androidTestImplementation "androidx.test.ext:junit:1.0.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}

apply plugin: 'com.google.gms.google-services'